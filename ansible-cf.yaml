---
AWSTemplateFormatVersion: 2010-09-09

Description: 'Launch an RedHat/CentOS instance with Tags, adds 2 volumes (log and app), OS logs redirected to CW Logs and Sentinel user latest public key. Template assumes realmd and OTP packages previously installed on AMI'

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: 'Amazon EC2 Instance Configuration'
        Parameters:
          - NameTag
          - Hostname
          - VPC
          - Subnet
          - SecurityGroup
          - KeyPair
          - InstanceType
          - ElasticIP
          - RootVolumeSize
          - AppVolumeSize
      -
        Label:
          default: 'Post-launch Configuration'
        Parameters:
          - CloudwatchRegion
          - S3LogConfigurationFile
          - SentinelPubKeyUrl
          - AnsiblePubKeyUrl
      -
        Label:
          default: 'Project Metadata Tags'
        Parameters:
          - ProjectIDTag
          - ProjectNameTag
          - ProjectAdminGroup
          - ApplicationNameTag
          - ApplicationVersionTag
          - CustomerTag
          - BusinessOwnerTag
          - TechnicalOwnerTag
          - ProjectManagerTag
          - DepartmentTag
          - DataPIITag
          - DataPCITag
          - DataHighestClassificationTag
          - EnvironmentTag
          - ServerOSTag
          - AMIidParam
          - TemplateTag
          - ResourceFunctionTag
          - BackupTag
          - RotateImageTag
          - RetentionTag
      -
        Label:
          default: 'Security access'
        Parameters:
          - AllowUsers
          - AllowGroups
          - DenyUsers
          - DenyGroups

Parameters:
  Subnet:
    Type: AWS::EC2::Subnet::Id
    Description: 'Instance Subnet ID'

  VPC:
    Type: AWS::EC2::VPC::Id
    Description: 'Instance VPC ID'

  SecurityGroup:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Description: 'Instance Security Group ID(s)'

  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName
    Description: 'Instance key pair name'

  NameTag:
    Type: String
    Default : 'ec2-us-east-1-1a-d-tomcat-instance-test'
    Description: 'EC2 Instance Name i.e. ec2-us-east-1-1a-s-wat-app-AmzLinux1-1'

  Hostname:
    Type: String
    Default: 'USE1ADRATTOMAPPC01'
    Description: 'Server Hostname i.e. USE1ASAWATAPP01'

  InstanceType:
    Type: String
    Default: t2.small
    AllowedValues:
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
    Description: 'Instance Type'

  ElasticIP:
    Type: String
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'
    Description: 'Assign an Elastic IP to the instance?'

  RootVolumeSize:
    Type: 'Number'
    Default: 20
    Description: 'Instance volume size in GB'

  AppVolumeSize:
    Type: 'Number'
    Default: 25
    Description: 'Application EBS Volume Size in GB'

  AllowUsers:
    Type: String
    Description: 'Add user, separate by comma, to allow access to server (if empty, allow all user access)'
  AllowGroups:
    Type: String
    Description: 'Add groups, separate by comma, to allow access to server (if empty, allow all groups access)'
  DenyUsers:
    Type: String
    Description: 'Add user, separate by comma, to deny access to server (if empty, allow all user access)'
  DenyGroups:
    Type: String
    Description: 'Add groups, separate by comma, to deny access to server (if empty, allow all groups access)'

  ProjectAdminGroup:
    Type: 'String'
    Default: ''
    Description: 'Project Admin Group to give sudo to server (i.e. aws-sandbox-arch, aws-sandbox-mindtree)'

  ProjectIDTag:
    Type: 'String'
    Default: ''
    Description: 'Entity internal project ID (comes from PMO spreadsheet subtype)'

  ProjectNameTag:
    Type: 'String'
    Default: ''
    Description: 'Entity internal project name as defined in JIRA'

  ApplicationNameTag:
    Type: 'String'
    Default: ''
    Description: 'Entity internal internal application name'

  ApplicationVersionTag:
    Type: 'String'
    Description: 'The version of the application deployed to this resource'

  CustomerTag:
    Type: 'String'
    Description: 'The name of the customer'

  BusinessOwnerTag:
    Type: 'String'
    Default: ''
    Description: 'The email address of the business owner for this resource'

  TechnicalOwnerTag:
    Type: 'String'
    Default: ''
    Description: 'The email address of the technical owner of this resource'

  ProjectManagerTag:
    Type: 'String'
    Default: ''
    Description: 'The email address of the project manager of this resource'

  DepartmentTag:
    Type: 'String'
    Default: 'INFORMATION TECHNOLOGY'
    Description: 'The name of the department that owns this resource'

  DataPIITag:
    Type: 'String'
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
    Description: 'Does this resouce hold any PII data (Yes/ No)'

  DataPCITag:
    Type: 'String'
    Default: 'No'
    AllowedValues:
      - 'Yes'
      - 'No'
    Description: 'Does this resouce hold any PCI data (Yes/No)'

  DataHighestClassificationTag:
    Type: String
    Default: 'Confidential'
    AllowedValues:
      - 'Restricted'
      - 'Confidential'
      - 'Internal Use'
      - 'Public'
      - 'Unknown'
    Description: 'The highest classification of data on this resource (Restricted/Confidential/Internal Use/Public/Unknown)'

  EnvironmentTag:
    Type: String
    Default: 'Development'
    AllowedValues:
      - 'Billing'
      - 'Sandbox'
      - 'Development'
      - 'Production'
      - 'Security'
      - 'Shared Services'
      - 'Analytics'
      - 'Other'
    Description: 'The environment type (Billing/Sandbox/Development/UAT/Systest/Production/Security/Shared Services)'

  ServerOSTag:
    Type: String
    Default: CentOS
    AllowedValues:
      - 'RHEL'
      - 'CentOS'
      - 'Custom'
    Description: 'The Server OS (RHEL/CentOS)'
  AMIidParam:
    Description: 'Enter a valid AMI ID, NOTE: Only if you selected "Custom" on ServerOSTag otherwise, this value is ignored'
    Type: String

  TemplateTag:
    Type: 'String'
    Default: 'compute-appserverv3.yaml'
    Description: 'The name of the CloudFormation template that created this resource'

  ResourceFunctionTag:
    Type: 'String'
    Default: 'App Server'
    AllowedValues:
      - 'Network Security'
      - 'Load Balancer'
      - 'App Server'
      - 'Database'
      - 'API'
      - 'Storage'
    Description: 'The function of this resource (Network Security/Load Balancer/App Server/Database Server/API, Storage)'

  BackupTag:
    Type: 'String'
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
    Description: 'Whether the instance is to be snapshotted daily (instance is restarted as part of the process)'

  RotateImageTag:
    Type: 'String'
    Description: 'The value of the ImageResource tag for the AMI to be created as a rotating base image for the EC2 instance (Free Text)'

  RetentionTag:
    Type: Number
    AllowedValues:
      - '3'
      - '7'
      - '14'
      - '21'
    Default: 7
    Description: 'The number of days to retain backups for (3/7/14/21) if not set it defaults to 7'

  CloudwatchRegion:
    Type: String
    Description: 'Region for Cloudwatch Logs'
    Default: us-east-1
    AllowedValues:
      - us-east-2
      - us-east-1
      - us-west-1
      - us-west-2
      - ca-central-1
      - ap-south-1
      - ap-northeast-2
      - ap-northeast-1
      - ap-southeast-2
      - ap-southeast-1
      - eu-central-1
      - eu-west-1
      - eu-west-2
      - sa-east-1
  S3LogConfigurationFile:
    Type: String
    Default: 'https://s3.amazonaws.com/s3-us-east-1-p-abg-shared-cloudformation/management/infrastructure/config-files/awslogs-abg-RHEL.cfg'
    Description: 'S3 path to the log configuration file eg. awslogs-abg-RHEL.cfg)'
    AllowedPattern: '\b(^https:\/\/([^\/]+)\/(.*?([^\/]+))$)\b'
  SentinelPubKeyUrl:
    Type: String
    Description: 'URL to the Sentinel key PUB file'
    Default: 'https://s3.amazonaws.com/s3-us-east-1-p-abg-shared-cloudformation/management/infrastructure/config-files/sentinel.pub'
    AllowedPattern: '\b(^((http[s]?|ftp):\/)?\/?([^:\/\s]+)((\/\w+)*\/)([\w\-\.]+[^#?\s]+)(.*)?(#[\w\-]+)?$)\b'
  AnsiblePubKeyUrl:
    Type: String
    Description: 'URL to the Ansible key PUB file'
    Default: 'https://s3.amazonaws.com/s3-us-east-1-p-abg-shared-cloudformation/management/infrastructure/config-files/ansible.pub'
    AllowedPattern: '\b(^((http[s]?|ftp):\/)?\/?([^:\/\s]+)((\/\w+)*\/)([\w\-\.]+[^#?\s]+)(.*)?(#[\w\-]+)?$)\b'

Conditions:
  EIP:
    !Equals [!Ref ElasticIP, 'Yes']
  noEIP:
    !Equals [!Ref ElasticIP, 'No']
  CustomOs:
    !Equals [!Ref ServerOSTag, 'Custom']
Mappings:

  OSRegionMap:
    us-east-1:
      CentOS: "ami-02e98f78"
      RHEL: "ami-a8d369c0"
    eu-west-1:
      CentOS: "ami-192a9460"
      RHEL: "ami-8cff51fb"

Resources:
  NetInterface:
    Type: AWS::EC2::NetworkInterface
    Properties:
      SubnetId: !Ref Subnet
      GroupSet:
        !Ref SecurityGroup
      SourceDestCheck: true
  EC2i:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType:
        !Ref InstanceType
      ImageId:
        !FindInMap [OSRegionMap,!Ref "AWS::Region", !Ref "ServerOSTag" ]

      NetworkInterfaces:
        - DeviceIndex: 0
          NetworkInterfaceId: !Ref NetInterface
      BlockDeviceMappings:
        -
          DeviceName: /dev/sda1
          Ebs:
            VolumeSize: !Ref RootVolumeSize
            VolumeType: 'gp2'
        -
          DeviceName: '/dev/sdb'
          Ebs:
            VolumeSize: 25
            VolumeType: 'gp2'
            Encrypted : true
        -
          DeviceName: '/dev/sdc'
          Ebs:
            VolumeSize:
              !Ref AppVolumeSize
            VolumeType: 'gp2'
            Encrypted : true

      UserData:
        Fn::Base64:
          Fn::Sub:
            - |
              #!/bin/bash
              yum update -y
              # Start format and mount log and application volumes
              sudo -s
              mkfs.ext4 /dev/xvdb # Format logging volume
              mkfs.ext4 /dev/xvdc # Format application volume
              mkdir -p /abgapps
              echo '/dev/xvdc   /abgapps   ext4    defaults,nofail        0       2' >> /etc/fstab
              echo '/dev/xvdb   /var/log   ext4    defaults,nofail        0       2' >> /etc/fstab
              mount -aF

              sudo yum -y install tomcat 
              sudo mkdir /opt/tomcat
              cd ~
              wget http://www-us.apache.org/dist/tomcat/tomcat-8/v8.5.31/bin/apache-tomcat-8.5.31.tar.gz
              sudo tar -zxvf apache-tomcat-8.5.31.tar.gz -C /opt/tomcat --strip-components=1
              cd /opt/tomcat
              sudo chgrp -R tomcat conf
              sudo chmod g+rwx conf
              sudo chmod g+r conf/*
              sudo chown -R tomcat logs/ temp/ webapps/ work/

              sudo chgrp -R tomcat bin
              sudo chgrp -R tomcat lib
              sudo chmod g+rwx bin
              sudo chmod g+r bin/*

              echo "[Unit]" >> /etc/systemd/system/tomcat.service
              echo "Description=Apache Tomcat Web Application Container" >> /etc/systemd/system/tomcat.service
              echo "After=syslog.target network.target" >> /etc/systemd/system/tomcat.service

              echo "[Service]" >> /etc/systemd/system/tomcat.service
              echo "Type=forking" >> /etc/systemd/system/tomcat.service

              echo "Environment=JAVA_HOME=/usr/lib/jvm/jre" >> /etc/systemd/system/tomcat.service
              echo "Environment=CATALINA_PID=/opt/tomcat/temp/tomcat.pid" >> /etc/systemd/system/tomcat.service
              echo "Environment=CATALINA_HOME=/opt/tomcat" >> /etc/systemd/system/tomcat.service
              echo "Environment=CATALINA_BASE=/opt/tomcat" >> /etc/systemd/system/tomcat.service
              echo "Environment='CATALINA_OPTS=-Xms512M -Xmx1024M -server -XX:+UseParallelGC'" >> /etc/systemd/system/tomcat.service
              echo "Environment='JAVA_OPTS=-Djava.awt.headless=true -Djava.security.egd=file:/dev/./urandom'" >> /etc/systemd/system/tomcat.service

              echo "ExecStart=/opt/tomcat/bin/startup.sh" >> /etc/systemd/system/tomcat.service
              echo "ExecStop=/bin/kill -15 $MAINPID" >> /etc/systemd/system/tomcat.service

              echo "User=tomcat" >> /etc/systemd/system/tomcat.service
              echo "Group=tomcat" >> /etc/systemd/system/tomcat.service

              echo "[Install]" >> /etc/systemd/system/tomcat.service
              echo "WantedBy=multi-user.target" >> /etc/systemd/system/tomcat.service

              sudo systemctl start tomcat.service
              sudo systemctl enable tomcat.service

              reboot

            - { Region: !Ref CloudwatchRegion, S3LogConfigurationFile: !Ref S3LogConfigurationFile, SentinelPubKeyUrl: !Ref SentinelPubKeyUrl, AnsiblePubKeyUrl: !Ref AnsiblePubKeyUrl }

      IamInstanceProfile: 'aws-logger-role-EC2' # This role has to exist previous to launch this template, gives permission to write logs on CW
      Tags:
        - Key: Name
          Value:
            !Ref NameTag
        - Key: ProjectID
          Value:
            !Ref ProjectIDTag
        - Key: ProjectName
          Value:
            !Ref ProjectNameTag
        - Key: ApplicationName
          Value:
            !Ref ApplicationNameTag
        - Key: ApplicationVersion
          Value:
            !Ref ApplicationVersionTag
        - Key: Customer
          Value:
            !Ref CustomerTag
        - Key: BusinessOwner
          Value:
            !Ref BusinessOwnerTag
        - Key: TechnicalOwner
          Value:
            !Ref TechnicalOwnerTag
        - Key: ProjectManager
          Value:
            !Ref ProjectManagerTag
        - Key: Department
          Value:
            !Ref DepartmentTag
        - Key: DataPII
          Value:
            !Ref DataPIITag
        - Key: DataPCI
          Value:
            !Ref DataPCITag
        - Key: DataHighestClassification
          Value:
            !Ref DataHighestClassificationTag
        - Key: Environment
          Value:
            !Ref EnvironmentTag
        - Key: ServerOS
          Value:
            !Ref ServerOSTag
        - Key: Template
          Value:
            !Ref TemplateTag
        - Key: ResourceFunction
          Value:
            !Ref ResourceFunctionTag
        - Key: Backup
          Value:
            !Ref BackupTag
        - Key: RotateImage
          Value:
            !Ref RotateImageTag
        - Key: Retention
          Value:
            !Ref RetentionTag

      KeyName:
        !Ref KeyPair

  EIP:
    Type: AWS::EC2::EIP
    Condition: EIP
    DependsOn: EC2i
    Properties:
      InstanceId:
        !Ref EC2i
      Domain:
        !Ref VPC
